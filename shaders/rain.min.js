export const GLSLX_SOURCE_FRAGMENT_SHADER = "precision highp float;uniform vec2 u_resolution;uniform float u_time;highp float g(float a){highp float b=mod(a,3.14);return fract(sin(b)*43758.5453);}vec2 j(float c,vec2 a,vec2 d){float b=d.x*abs(a.y/d.y),e=-b*step(0.,b)+(a.x+abs(b))*g(c),f=(1.+.05*g(1.234*c))*a.y;return vec2(e,f);}vec4 n(vec2 e,vec2 f,vec2 h,float i,float c){vec2 b=e-f;float a=dot(b,-h),k=dot(b,b)-pow(a,2.),d=pow(i,2.),l=step(0.,a)*(1.-smoothstep(d/2.,d,k)),m=l*step(.5,cos(.3*a-1.047198)),o=m*(1.-smoothstep(c/5.,c,a));return vec4(o);}void main(){vec2 b=vec2(23.-.5*u_resolution.x,-.9*u_resolution.y)/.7,h=normalize(b);vec4 d=vec4(0.);for(float a=0.;a<20.;++a){float c=u_time+1.2*(a+a/20.),e=mod(c,1.2);vec2 f=j(a+floor(c/1.2-a)*20.,u_resolution,b),i=f+e*b;d+=n(gl_FragCoord.xy,i,h,2.,70.);}gl_FragColor=d;}"
export const GLSLX_SOURCE_VERTEX_SHADER = "precision highp float;attribute vec3 aPosition;void main(){gl_Position=vec4(aPosition,1.);}"

export const GLSLX_NAME_U_RESOLUTION = "u_resolution"
export const GLSLX_NAME_U_TIME = "u_time"
export const GLSLX_NAME_A_POSITION = "aPosition"
